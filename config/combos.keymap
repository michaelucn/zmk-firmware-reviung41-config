/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define MORPH(NAME, BINDING_0, BINDING_1)\
        morph_##NAME: morph_##NAME {\
                compatible = "zmk,behavior-mod-morph";\
                #binding-cells = <0>;\
                bindings = <##BINDING_0>, <##BINDING_1>;\
                mods = <(MOD_LSFT|MOD_RSFT)>;\
        };

#define COMBO(FINGER, KEY, KEY_POS)\
        combo_##FINGER {\
                key-positions = ##KEY_POS;\
                layers = <0>;\
                bindings = <##KEY>;\
        };

/ {
        behaviors {
                MORPH(paren_slash_r, &kp RIGHT_PARENTHESIS, &kp SLASH)
                MORPH(brace_bracket_r, &kp RIGHT_BRACE, &kp RIGHT_BRACKET)

                MORPH(paren_slash_l, &kp LEFT_PARENTHESIS, &kp BACKSLASH)
                MORPH(brace_bracket_l, &kp LEFT_BRACE, &kp LEFT_BRACKET)
        };
};

/ {
        combos {
                compatible = "zmk,combos";

                COMBO(inner_r, &kp PIPE, <6 18>)
                COMBO(index_r, &morph_paren_slash_r, <7 19>)
                COMBO(middle_r, &morph_brace_bracket_r, <8 20>)
                COMBO(ring_r, &kp EQUAL, <9 21>)

                COMBO(inner_l, &kp STAR, <5 17>)
                COMBO(index_l, &morph_paren_slash_l, <4 16>)
                COMBO(middle_l, &morph_brace_bracket_l, <3 15>)
                COMBO(ring_l, &kp MINUS, <2 14>)

                COMBO(inner_tucky_r, &kp AMPERSAND, <18 30>)
                COMBO(inner_tucky_l, &kp PERCENT, <17 29>)
        };
};
