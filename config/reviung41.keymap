/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200
#define ZMK_POINTING_DEFAULT_SCRL_VAL 500

#include "combos.keymap"
#include <behaviors.dtsi>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define RIGHT_KEYS <6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 36 37 38 39 40>
#define LEFT_KEYS <1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 36 37 38 39 40>


#define HM(NAME, HOLD_TRIGGER_KEYS, REQUIRED_IDLE)\
        hm##NAME: homerow_mods_##NAME {\
                compatible = "zmk,behavior-hold-tap";\
                #binding-cells = <2>;\
                flavor = "balanced";\
                bindings = <&kp>, <&kp>;\
                tapping-term-ms = <500>;\
                quick-tap-ms = <200>;\
                require-prior-idle-ms = <##REQUIRED_IDLE>;\
                hold-trigger-on-release;\
                hold-trigger-key-positions = ##HOLD_TRIGGER_KEYS;\
        };
/ {
        behaviors {
                HM(l, RIGHT_KEYS, 200)
                HM(ls, RIGHT_KEYS, 0)

                HM(r, LEFT_KEYS, 200)
                HM(rs, LEFT_KEYS, 0)

                marks: question_exclamation {
                        compatible = "zmk,behavior-mod-morph";
                        #binding-cells = <0>;
                        bindings = <&kp QUESTION>, <&kp EXCLAMATION>;
                        mods = <(MOD_LSFT|MOD_RSFT)>;
                };

        };
};

/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                        if-layers = <1 2>;
                        then-layer = <5>;
                };
        };
};

&mmv {
    x-input-code = <INPUT_REL_X>;
    y-input-code = <INPUT_REL_Y>;
    time-to-max-speed-ms = <200>;
    acceleration-exponent = <2>;
};

&mmv_input_listener {
    slower {
        layers = <4>;
        input-processors = <&zip_xy_scaler 1 4>;
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
&none  &kp F    &kp P        &kp D         &kp L           &kp X   &kp SEMI   &kp O           &kp U         &kp Y        &kp B  &none
&none  &kp S    &hml LGUI N  &hml LCTRL T  &hmls LSHIFT H  &kp K   &kp COMMA  &hmrs LSHIFT A  &hmr LCTRL E  &hmr LGUI I  &kp C  &none
&none  &marks   &kp W        &kp G         &hml LALT M     &kp J   &kp Q      &hmr LALT DOT   &kp Z         &kp SQT      &kp V  &none
&mo 3  &lt 1 R  &kp TAB      &lt 2 SPACE   &none
                        >;
                };

                nav_layer {
                        bindings = <
&none  &kp C_MUTE    &kp C_PREV    &kp C_PP      &kp C_NEXT  &kp C_STOP  &kp PG_UP  &kp HOME      &kp UP      &kp END       &kp INS       &none
&none  &kp C_BRI_UP  &kp LGUI      &kp LCTRL     &kp LSHFT   &none       &kp PG_DN  &kp LEFT      &kp DOWN    &kp RIGHT     &kp PSCRN     &none
&none  &kp C_BRI_DN  &kp C_VOL_DN  &kp C_VOL_UP  &kp LALT    &none       &none      &out OUT_TOG  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &none
&none  &none         &trans        &kp BSPC      &none
                        >;
                };

                num_layer {
                        bindings = <
&none  &kp AT    &kp N6   &kp N5  &kp N4  &kp PERCENT  &none  &kp DOLLAR  &kp CARET  &kp TILDE  &none      &none
&none  &kp N0    &kp N3   &kp N2  &kp N1  &kp AMPS     &none  &kp LSHIFT  &kp LCTRL  &kp LGUI   &kp GRAVE  &none
&none  &kp STAR  &kp N9   &kp N8  &kp N7  &kp HASH     &none  &kp LALT    &none      &none      &none      &none
&none  &kp DEL   &trans  &none   &none
                        >;
                };

                mouse_layer {
                        bindings = <
&none  &none  &none     &none      &none      &none  &none  &msc SCRL_DOWN  &mmv MOVE_UP    &msc SCRL_UP     &mkp MB2  &none
&none  &none  &kp LGUI  &kp LCTRL  &kp LSHFT  &none  &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB1  &none
&none  &none  &none     &none      &kp LALT   &none  &none  &msc SCRL_LEFT  &none           &msc SCRL_RIGHT  &mkp MB3  &none
&none  &none  &none  &mo 4  &none
                        >;
                };

                mouse2_layer {
                        bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans
                        >;
                };

                function_layer {
                        bindings = <
&none  &kp F1  &kp F2   &kp F3   &kp F4   &none  &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3     &none
&none  &kp F5  &kp F6   &kp F7   &kp F8   &none  &out OUT_TOG  &kp LSHFT     &kp LCTRL       &kp LGUI        &kp PSCRN        &none
&none  &kp F9  &kp F10  &kp F11  &kp F12  &none  &none         &kp LALT      &kp KP_NUMLOCK  &kp SCROLLLOCK  &kp PAUSE_BREAK  &none
&none  &trans  &trans  &trans  &none
                        >;
                };
        };
};
